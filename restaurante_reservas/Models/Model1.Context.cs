//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace restaurante_reservas.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class restauranteEntities : DbContext
    {
        public restauranteEntities()
            : base("name=restauranteEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<categoria_menu> categoria_menu { get; set; }
        public virtual DbSet<Clientes> Clientes { get; set; }
        public virtual DbSet<Estados> Estados { get; set; }
        public virtual DbSet<Menu> Menu { get; set; }
        public virtual DbSet<Reservas> Reservas { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
    
        public virtual int sp_Actualizar_Cliente(Nullable<int> id_Cliente, string nombre, string primer_apellido, string segundo_apellido, string telefono_principal, string correo)
        {
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("id_Cliente", id_Cliente) :
                new ObjectParameter("id_Cliente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var primer_apellidoParameter = primer_apellido != null ?
                new ObjectParameter("primer_apellido", primer_apellido) :
                new ObjectParameter("primer_apellido", typeof(string));
    
            var segundo_apellidoParameter = segundo_apellido != null ?
                new ObjectParameter("segundo_apellido", segundo_apellido) :
                new ObjectParameter("segundo_apellido", typeof(string));
    
            var telefono_principalParameter = telefono_principal != null ?
                new ObjectParameter("telefono_principal", telefono_principal) :
                new ObjectParameter("telefono_principal", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Actualizar_Cliente", id_ClienteParameter, nombreParameter, primer_apellidoParameter, segundo_apellidoParameter, telefono_principalParameter, correoParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_Delete_Menu(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Delete_Menu", idParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_Inserta_Clientes_Result> sp_Inserta_Clientes(string cedula, Nullable<System.DateTime> fecha_nacimiento, string nombre, string primer_apellido, string segundo_apellido, string telefono_principal, string correo_electronico)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("cedula", cedula) :
                new ObjectParameter("cedula", typeof(string));
    
            var fecha_nacimientoParameter = fecha_nacimiento.HasValue ?
                new ObjectParameter("fecha_nacimiento", fecha_nacimiento) :
                new ObjectParameter("fecha_nacimiento", typeof(System.DateTime));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var primer_apellidoParameter = primer_apellido != null ?
                new ObjectParameter("primer_apellido", primer_apellido) :
                new ObjectParameter("primer_apellido", typeof(string));
    
            var segundo_apellidoParameter = segundo_apellido != null ?
                new ObjectParameter("segundo_apellido", segundo_apellido) :
                new ObjectParameter("segundo_apellido", typeof(string));
    
            var telefono_principalParameter = telefono_principal != null ?
                new ObjectParameter("telefono_principal", telefono_principal) :
                new ObjectParameter("telefono_principal", typeof(string));
    
            var correo_electronicoParameter = correo_electronico != null ?
                new ObjectParameter("correo_electronico", correo_electronico) :
                new ObjectParameter("correo_electronico", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Inserta_Clientes_Result>("sp_Inserta_Clientes", cedulaParameter, fecha_nacimientoParameter, nombreParameter, primer_apellidoParameter, segundo_apellidoParameter, telefono_principalParameter, correo_electronicoParameter);
        }
    
        public virtual int sp_Inserta_Menu(string platillo, string descripcion, string img, Nullable<int> id_Categoria, Nullable<int> id_Estado)
        {
            var platilloParameter = platillo != null ?
                new ObjectParameter("platillo", platillo) :
                new ObjectParameter("platillo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            var id_CategoriaParameter = id_Categoria.HasValue ?
                new ObjectParameter("id_Categoria", id_Categoria) :
                new ObjectParameter("id_Categoria", typeof(int));
    
            var id_EstadoParameter = id_Estado.HasValue ?
                new ObjectParameter("id_Estado", id_Estado) :
                new ObjectParameter("id_Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inserta_Menu", platilloParameter, descripcionParameter, imgParameter, id_CategoriaParameter, id_EstadoParameter);
        }
    
        public virtual int sp_Inserta_Reserva(Nullable<int> id_Cliente, Nullable<System.DateTime> fecha, Nullable<int> id_Estado, Nullable<int> cant_Personas)
        {
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("id_Cliente", id_Cliente) :
                new ObjectParameter("id_Cliente", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var id_EstadoParameter = id_Estado.HasValue ?
                new ObjectParameter("id_Estado", id_Estado) :
                new ObjectParameter("id_Estado", typeof(int));
    
            var cant_PersonasParameter = cant_Personas.HasValue ?
                new ObjectParameter("cant_Personas", cant_Personas) :
                new ObjectParameter("cant_Personas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inserta_Reserva", id_ClienteParameter, fechaParameter, id_EstadoParameter, cant_PersonasParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Login(string usuario, string contrasena)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Login", usuarioParameter, contrasenaParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<sp_Seleccionar_Cliente_Result> sp_Seleccionar_Cliente(Nullable<int> id_usuario)
        {
            var id_usuarioParameter = id_usuario.HasValue ?
                new ObjectParameter("id_usuario", id_usuario) :
                new ObjectParameter("id_usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Seleccionar_Cliente_Result>("sp_Seleccionar_Cliente", id_usuarioParameter);
        }
    
        public virtual ObjectResult<sp_Seleccionar_Menu_Result> sp_Seleccionar_Menu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Seleccionar_Menu_Result>("sp_Seleccionar_Menu");
        }
    
        public virtual ObjectResult<sp_Seleccionar_Menu_Admin_Result> sp_Seleccionar_Menu_Admin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Seleccionar_Menu_Admin_Result>("sp_Seleccionar_Menu_Admin");
        }
    
        public virtual ObjectResult<sp_Selecionar_Reservas_Cliente_Result> sp_Selecionar_Reservas_Cliente(Nullable<int> id_Cliente)
        {
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("id_Cliente", id_Cliente) :
                new ObjectParameter("id_Cliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Selecionar_Reservas_Cliente_Result>("sp_Selecionar_Reservas_Cliente", id_ClienteParameter);
        }
    
        public virtual ObjectResult<sp_Selecionar_Todas_Reservas_Result> sp_Selecionar_Todas_Reservas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Selecionar_Todas_Reservas_Result>("sp_Selecionar_Todas_Reservas");
        }
    
        public virtual int sp_Update_Menu(Nullable<int> id, string platillo, string descripcion, string img, Nullable<int> id_Categoria, Nullable<int> id_Estado)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var platilloParameter = platillo != null ?
                new ObjectParameter("platillo", platillo) :
                new ObjectParameter("platillo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(string));
    
            var id_CategoriaParameter = id_Categoria.HasValue ?
                new ObjectParameter("id_Categoria", id_Categoria) :
                new ObjectParameter("id_Categoria", typeof(int));
    
            var id_EstadoParameter = id_Estado.HasValue ?
                new ObjectParameter("id_Estado", id_Estado) :
                new ObjectParameter("id_Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Update_Menu", idParameter, platilloParameter, descripcionParameter, imgParameter, id_CategoriaParameter, id_EstadoParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int sp_Actualizar_Reserva(Nullable<int> id, Nullable<System.DateTime> fecha, Nullable<int> id_Estado, Nullable<int> cantidad_personas)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var id_EstadoParameter = id_Estado.HasValue ?
                new ObjectParameter("id_Estado", id_Estado) :
                new ObjectParameter("id_Estado", typeof(int));
    
            var cantidad_personasParameter = cantidad_personas.HasValue ?
                new ObjectParameter("cantidad_personas", cantidad_personas) :
                new ObjectParameter("cantidad_personas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Actualizar_Reserva", idParameter, fechaParameter, id_EstadoParameter, cantidad_personasParameter);
        }
    }
}
